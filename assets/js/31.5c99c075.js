(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{573:function(e,t,n){"use strict";n.r(t);var i=n(42),o=Object(i.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"configuration-of-the-schema"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-the-schema"}},[this._v("#")]),this._v(" Configuration of the schema")]),this._v(" "),t("p",[this._v("The awesome crud configuration schema.")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("{\n  $id: 'http://enyosolutions.com/schema.json',\n  type: 'object',\n  properties: {\n    title: {\n      type: 'object',\n      title: 'The title of the property, used in form fields and columns',\n      column: {\n        type: 'image',\n      },\n    },\n    relation: {\n      type: 'string',\n      title: 'The object that this property is related to',\n      example: 'user',\n    },\n    foreignKey: {\n      type: 'string',\n      title: 'The field of the object that this property is related to (eg relation[foreignKey] == this property',\n      example: '_id',\n    },\n    min: {\n      type: 'number',\n      title: 'the minimum number of characters',\n    },\n    max: {\n      type: 'number',\n      title: 'the maximum number of characters',\n    },\n    field: {\n      type: 'object',\n      title: 'Configuration of the behavior of the property in forms',\n      properties: {\n        title: {\n          type: 'string',\n          title: 'The title of the field',\n        },\n        type: {\n          type: 'string',\n          title: 'The type of the field, comming from https://vue-generators.gitbook.io/vue-generators/fields',\n          example: 'EnyoSelect, dateTime, textArea',\n          enum: ['string', 'input', 'number', 'list-of-value', 'list-of-data', 'EnyoSelect', 'dateTime', 'textArea'],\n        },\n        inputType: {\n          type: 'string',\n          title:\n            'The type of the field, when its a text input comming from https://vue-generators.gitbook.io/vue-generators/fields',\n          example: 'file',\n          enum: ['text', 'date', 'number', 'radio', 'checkbox', 'datetime', 'masked'],\n        },\n        required: {\n          type: 'boolean',\n          title: 'If the form field is required',\n        },\n        readonly: {\n          type: 'boolean',\n          title: 'If the form field is readlonly',\n        },\n        hidden: {\n          type: 'boolean',\n          title: 'If the form field is displayed',\n        },\n        styleClasses: {\n          type: 'string',\n          title: 'The class that will be around the field',\n          example: 'col-md-12',\n        },\n        min: {\n          type: 'number',\n          title: 'the minimum number of characters',\n        },\n        max: {\n          type: 'number',\n          title: 'the maximum number of characters',\n        },\n        fieldOptions: {\n          title: 'Options to be used on custom forms fields like multiselect, toggle etc',\n          properties: {\n            type: {\n              type: 'string',\n              title:\n                'The type that links to the field option. In case of a dateTime selector, this would be date or datetime',\n              enum: ['date', 'datetime'],\n            },\n            multiple: {\n              type: 'boolean',\n              title: 'If the select is multiple (for selects)',\n            },\n            enum: {\n              type: ['string', 'array'],\n              title:\n                'The list of values to use for the select. If the value is string and starts with $store then the value is taken from the vuejs $store',\n              example: '$store.listOfValues.users',\n            },\n            url: {\n              type: 'string',\n              title: 'The url to use to load the data for the select (ajax)',\n              example: '/user',\n            },\n            trackBy: {\n              type: 'string',\n              title: 'The field to use as the value in the select',\n              example: '_id',\n            },\n\n            label: {\n              type: 'string',\n              title: 'The field to use as the Label in the select',\n              example: 'username',\n            },\n            displayOptions: {\n            title: 'Options to be used on custom forms fields like view mode',\n             properties: {\n            type: {\n              type: 'string',\n              title:\n                'The type that links to the field option. In case of a dateTime selector, this would be date or datetime',\n              enum: ['date', 'datetime'],\n            }\n          }\n          },\n\n\n          }\n        },\n        validator: {\n          type: 'Array',\n          title:\n            'the validators used to validate fields https://vue-generators.gitbook.io/vue-generators/validation/built-in-validators',\n          example: ['string'],\n        },\n      },\n    },\n    column: {\n      type: 'object',\n      title: 'Configuration of the behavior of the property in lists',\n      properties: {\n        title: {\n          type: 'string',\n          title: 'The title of the field',\n        },\n        type: {\n          type: 'string',\n          title: 'The type of the column, comming from https://vue-generators.gitbook.io/vue-generators/fields',\n          enum: ['image', 'string', 'number', 'date', 'datetime', 'list-of-value'],\n        },\n        format: {\n          type: 'string',\n          title: 'Extra configuration for the item'\n        }\n        hidden: {\n          type: 'string',\n          title: 'If the form field is displayed',\n        },\n      },\n    },\n  },\n}\n")])])])])}),[],!1,null,null,null);t.default=o.exports}}]);